import React from "react";import {View, Image, Text} from 'react-native';import COLORS from "../consts/colors";import { createStackNavigator } from '@react-navigation/stack';import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';import {createDrawerNavigator} from '@react-navigation/drawer';import styles from '../../assets/styles'import CustomDrawerContent from './CustomDrawerContent'import i18n from "../../locale/i18n";import Home                     from "../components/Home";import SearchByList             from "../components/SearchByList";import Contracting              from "../components/Contracting";import AddOrder            		from "../components/AddOrder";import Profile            		from "../components/Profile";import EditProfile            	from "../components/EditProfile";import EditPass            		from "../components/EditPass";import AdverInfo            	from "../components/AdverInfo";import Notifications           	from "../components/Notifications";import MyAds           			from "../components/MyAds";import Favourite           		from "../components/Favourite";import AddUrAd           		from "../components/AddUrAd";import AboutApp 				from "../components/AboutApp";import ContactUs 				from "../components/ContactUs";import AddAdTerms 				from "../components/AddAdTerms";import GetLocation 				from "../components/GetLocation";import AdImgs 					from "../components/AdImgs";import AdDetails 				from "../components/AdDetails";import EditAd 					from "../components/EditAd";import DetailsAdded 			from "../components/DetailsAdded";import BasicDetails 			from "../components/BasicDetails";import AdFee 					from "../components/AdFee";import PayMethods 				from "../components/PayMethods";import ReviewAd 				from "../components/ReviewAd";import ConfirmPost 				from "../components/ConfirmPost";import Orders 					from "../components/Orders";import NewAddedDetails 			from "../components/NewAddedDetails";import ListDetails 				from "../components/ListDetails";import AdvertiserDetails 		from "../components/AdvertiserDetails";import Faq 						from "../components/Faq";import UserManual 				from "../components/UserManual";import SocialMedia 				from "../components/SocialMedia";import AdvancedSearch 			from "../components/AdvancedSearch";import SearchResults 			from "../components/SearchResults";import AllContracting 			from "../components/AllContracting";import RealEstateComp 			from "../components/RealEstateComp";import RealEstateDet 			from "../components/RealEstateDet";import Terms 					from "../components/Terms";import Questions 				from "../components/Questions";import Add		 				from "../components/Add";const MainStack  	= createStackNavigator();const Drawer 	 	= createDrawerNavigator();const Tabs   	 	= createBottomTabNavigator();const HomeStack  	= createStackNavigator();export function HomeStackStackNavigator()  {	return(		<HomeStack.Navigator mode={'card'} screenOptions={{headerShown: false}} initialRouteName="home" >			<HomeStack.Screen name='home' component={Home}/>		</HomeStack.Navigator>	);}function TabsScreen() {	return (		<Tabs.Navigator			initialRouteName="homeStack"			tabBarOptions={{				activeTintColor: COLORS.black,				style: styles.footerStyle,				tabStyle : [styles.directionColumnCenter , styles.Width_100]			}}		>			<Tabs.Screen				name="homeStack"				component={HomeStackStackNavigator}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textRegular , styles.text_midGray , styles.textSize_11]}>{i18n.t('map')}</Text>					),					tabBarIcon: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab, styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/white_map.png') : require('../../assets/images/gray_map.png')} style={[styles.icon20]} resizeMode={'contain'} />						</View>					),				}}			/>			<Tabs.Screen				name="searchByList"				component={SearchByList}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textRegular , styles.text_midGray , styles.textSize_11]}>{i18n.t('menu')}</Text>					),					tabBarIcon: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab, styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/list_white.png') : require('../../assets/images/list_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />						</View>					),				}}			/>			<Tabs.Screen				name="add"				component={Add}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textRegular , styles.text_midGray , styles.textSize_11]}>{i18n.t('add')}</Text>					),					tabBarIcon: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab, styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/plus_active.png') : require('../../assets/images/non_plus.png')} style={[styles.icon20]} resizeMode={'contain'} />						</View>					),				}}			/>			<Tabs.Screen				name="contracting"				component={Contracting}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textRegular , styles.text_midGray , styles.textSize_11]}>{i18n.t('services')}</Text>					),					tabBarIcon: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab, styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/job_active.png') : require('../../assets/images/job_non.png')} style={[styles.icon20]} resizeMode={'contain'} />						</View>					),				}}			/>			<Tabs.Screen				name="profile"				component={Profile}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textRegular , styles.text_midGray , styles.textSize_11]}>{i18n.t('profile')}</Text>					),					tabBarIcon: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab, styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/user_active.png') : require('../../assets/images/usernon_active.png')} style={[styles.icon20]} resizeMode={'contain'} />						</View>					),				}}			/>		</Tabs.Navigator>	);}function MyDrawer() {	return (		<Drawer.Navigator			initialRouteName="tabs"			drawerStyle={[styles.Width_100]}            drawerContentOptions={{                itemStyle: [{ backgroundColor: 'transparent' , marginHorizontal:0}],                labelStyle: [styles.textRegular ,{color:COLORS.green }],            }}			drawerContent={(props) => <CustomDrawerContent {...props} />}>            <Drawer.Screen name="tabs" component={TabsScreen}/>            <Drawer.Screen name="myAds" component={MyAds}/>            <Drawer.Screen name="favourite" component={Favourite}/>            <Drawer.Screen name="addAdTerms" component={AddAdTerms}/>            <Drawer.Screen name="aboutApp" component={AboutApp}/>            <Drawer.Screen name="contactUs" component={ContactUs}/>            <Drawer.Screen name="questions" component={Questions}/>        </Drawer.Navigator>	);}export function MainStackNavigator()  {	return(		<MainStack.Navigator mode={'card'} screenOptions={{headerShown: false}}  >			<MainStack.Screen name='myDrawer' component={MyDrawer}/>			<MainStack.Screen name='editProfile' component={EditProfile}/>			<MainStack.Screen name='editPass' component={EditPass}/>			<MainStack.Screen name='adverInfo' component={AdverInfo}/>			<MainStack.Screen name='notifications' component={Notifications}/>			<MainStack.Screen name='addUrAd' component={AddUrAd}/>			<MainStack.Screen name='getLocation' component={GetLocation}/>			<MainStack.Screen name='adImgs' component={AdImgs}/>			<MainStack.Screen name='adDetails' component={AdDetails}/>			<MainStack.Screen name='editAd' component={EditAd}/>			<MainStack.Screen name='detailsAdded' component={DetailsAdded}/>			<MainStack.Screen name='basicDetails' component={BasicDetails}/>			<MainStack.Screen name='adFee' component={AdFee}/>			<MainStack.Screen name='payMethods' component={PayMethods}/>			<MainStack.Screen name='reviewAd' component={ReviewAd}/>			<MainStack.Screen name='confirmPost' component={ConfirmPost}/>			<MainStack.Screen name='orders' component={Orders}/>			<MainStack.Screen name='newAddedDetails' component={NewAddedDetails}/>			<MainStack.Screen name='listDetails' component={ListDetails}/>			<MainStack.Screen name='advertiserDetails' component={AdvertiserDetails}/>			<MainStack.Screen name='faq' component={Faq}/>			<MainStack.Screen name='userManual' component={UserManual}/>			<MainStack.Screen name='socialMedia' component={SocialMedia}/>			<MainStack.Screen name='advancedSearch' component={AdvancedSearch}/>			<MainStack.Screen name='searchResults' component={SearchResults}/>			<MainStack.Screen name='allContracting' component={AllContracting}/>			<MainStack.Screen name='realEstateComp' component={RealEstateComp}/>			<MainStack.Screen name='realEstateDet' component={RealEstateDet}/>			<MainStack.Screen name='terms' component={Terms}/>			<MainStack.Screen name='addOrder' component={AddOrder}/>		</MainStack.Navigator>	);}